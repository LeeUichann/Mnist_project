# -*- coding: utf-8 -*-
"""Dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cq73QtheDgKAPUqkVhxMQj4WBlXLfL9T
"""

import tarfile
from torchvision import transforms
from PIL import Image
import os
from torch.utils.data import DataLoader, Dataset
import matplotlib.pyplot as plt
import torchvision


class Mnist(Dataset):

    def __init__(self, file_path, transform = None):
        self.file_path = file_path
        self.tar_file = tarfile.open(self.file_path, 'r')
        self.Mlist = []

        for i in self.tar_file.getmembers():

              filename = os.path.basename(i.name)
              parts = filename.split('_')
              if len(parts) == 2:
                id, label = parts
                label = int(label.split('.')[0])
                self.Mlist.append((i,label))

        self.transform = transform

    def __len__(self):
        return len(self.Mlist)


    def __getitem__(self, idx):
        i, label = self.Mlist[idx]
        file = self.tar_file.extractfile(i)
        img = Image.open(file)

        if self.transform is not None:
            img = self.transform(img)

        return img, label

if __name__ == '__main__':
    file_path = '../file_path'
    train_dataset = Mnist(file_path=file_path, transform = transforms.ToTensor())
    train_dataloader2 = DataLoader(train_dataset, batch_size=8, shuffle=True)

    train_iter2 = iter(train_dataloader2)
    images, labels = next(train_iter2)

    grid = torchvision.utils.make_grid(images)

    plt.imshow(grid.permute(1,2,0).numpy())
    plt.axis('off')
    plt.title(', '.join(str(label.item()) for label in labels))